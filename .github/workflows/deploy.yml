name: Deploy Flask + React to EC2 on Merge to Main

on:
  push:
    branches:
      - main  # Make sure your main branch name matches

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Rsync code to EC2
        run: |
          rsync -avz --exclude='node_modules' ./frontend ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/hophacks-flask/
          rsync -avz --exclude='__pycache__' ./api ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/hophacks-flask/

      - name: SSH and deploy on EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Stop running backend/frontend processes and tmux sessions
            killall gunicorn || true
            killall node || true
            tmux kill-session -t backend || true
            tmux kill-session -t frontend || true

            # Navigate to project folder
            cd ~/hophacks-flask

            # Source bashrc to get correct node version (nvm etc.)
            source ~/.bashrc

            # Pull latest code if you want (optional)
            # git pull || true

            # Build frontend
            cd frontend
            npm install --legacy-peer-deps
            npm run build

            # Build docs (optional)
            cd ../api/docs
            make clean
            make html

            # Start backend tmux session
            cd ../src
            tmux new-session -d -s backend 'source ../../venv/bin/activate; gunicorn -w 1 "app:create_app()" -b 127.0.0.1:8000; bash'

            # Start frontend tmux session
            cd ../../frontend
            tmux new-session -d -s frontend 'serve -s build; bash'
          EOF
